name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x
      
      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.11
        with:
          versionSpec: '6.0.x'

      - name: Calculate version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.1.11

      - name: Restore dependencies
        working-directory: src
        run: dotnet restore

      - name: Build
        working-directory: src
        run: dotnet build --configuration Release /p:Version=${{ steps.gitversion.outputs.GitVersion_SemVer }}
      
      - name: Test and Collect Coverage
        working-directory: src
        run: dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage" --logger "trx;LogFileName=test_results.trx"

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: steveski/HandyStuff
          files: '**/coverage.cobertura.xml'
          fail_ci_if_error: true
          

      # Package and Publish
      - name: Pack
        run: dotnet pack src/Crypto/Crypto.csproj --configuration Release --no-build /p:PackageVersion=${{ steps.gitversion.outputs.GitVersion_SemVer }}

      - name: Publish all NuGet packages
        run: |
          find . -name '*.nupkg' -print | while read pkg; do
            echo "Publishing $pkg"
            dotnet nuget push "$pkg" \
              --api-key ${{ secrets.NUGET_API_KEY }} \
              --source https://api.nuget.org/v3/index.json \
              --skip-duplicate
          done

      - name: Publish to MyGet
        run: |
          find . -name '*.nupkg' -print | while read pkg; do
            echo "Publishing $pkg"
            dotnet nuget push "$pkg" \
              --api-key ${{ secrets.MYGET_API_KEY }} \
              --source https://www.myget.org/F/your-feed/api/v3/index.json \
              --skip-duplicate
          done             

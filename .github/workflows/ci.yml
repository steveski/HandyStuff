name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.semVer }}
      isPrerelease: ${{ steps.isprerelease.outputs.result }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x
      
      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.11
        with:
          versionSpec: '6.0.x'

      - name: Calculate version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.1.11

      - name: Determine if version is pre-release
        id: isprerelease
        run: |
          if [[ "${{ steps.gitversion.outputs.semVer }}" == *-* ]]; then
            echo "result=true" >> $GITHUB_OUTPUT
          else
            echo "result=false" >> $GITHUB_OUTPUT
          fi

      - name: Restore dependencies
        working-directory: src
        run: dotnet restore

      - name: Build
        working-directory: src
        run: dotnet build --configuration Release /p:Version=${{ steps.gitversion.outputs.semVer }}

      - name: Test and Collect Coverage
        working-directory: src
        run: dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage" --logger "trx;LogFileName=test_results.trx"

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: steveski/HandyStuff
          files: '**/coverage.cobertura.xml'
          fail_ci_if_error: true
          
      - name: Pack
        run: dotnet pack src/Crypto/Crypto.csproj --configuration Release --no-build /p:PackageVersion=${{ steps.gitversion.outputs.semVer }}

      - name: Upload NuGet packages
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: '**/*.nupkg'


  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only publish on push, not PR
    steps:
      - name: Download NuGet packages
        uses: actions/download-artifact@v4
        with:
          name: nuget-packages

      - name: Upload to MyGet (pre-release only)
        if: needs.build.outputs.isPrerelease == 'true'
        run: |
          find . -name '*.nupkg' -print | while read pkg; do
            echo "Publishing $pkg to MyGet"
            dotnet nuget push "$pkg" \
              --api-key ${{ secrets.MYGET_API_KEY }} \
              --source https://www.myget.org/F/steveski-ci/api/v3/index.json \
              --skip-duplicate
          done

      - name: Upload to NuGet (release only)
        if: needs.build.outputs.isPrerelease == 'false'
        run: |
          find . -name '*.nupkg' -print | while read pkg; do
            echo "Publishing $pkg to NuGet.org"
            dotnet nuget push "$pkg" \
              --api-key ${{ secrets.NUGET_API_KEY }} \
              --source https://api.nuget.org/v3/index.json \
              --skip-duplicate
          done
